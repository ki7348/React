{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ki734\\\\React\\\\ToyProject\\\\05\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://image.ajunews.com/content/image/2020/10/18/20201018211753966706.jpg\",\n    title: \"First Meetup\",\n    address: \"Some STreet 5, Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://sad:ehdrlsean97@cluster0.lblgl.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://sad:ehdrlsean97@cluster0.lblgl.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/ki734/React/ToyProject/05/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","meetupData"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAC,6EAApB;AACH,IAAA,KAAK,EAAC,cADH;AAEH,IAAA,OAAO,EAAC,0BAFL;AAGH,IAAA,WAAW,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoB,8FAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAM;AACFC,IAAAA,QAAQ,EAAE,KADR;AAEFC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAG;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AAAT,KAAH,CAAlB;AAFL,GAAN;AAIH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoB,8FAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAEQ;AAAN,GAA1B,CAA7B;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAM;AACFX,IAAAA,KAAK,EAAC;AACFuB,MAAAA,UAAU,EAAEF;AADV;AADJ,GAAN;AAKH;AAED,eAAetB,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\"\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\r\n\r\nfunction MeetupDetails(props) {\r\n    return <MeetupDetail image='https://image.ajunews.com/content/image/2020/10/18/20201018211753966706.jpg'\r\n        title=\"First Meetup\"\r\n        address=\"Some STreet 5, Some City\"\r\n        description=\"This is a first meetup\"\r\n    />\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://sad:ehdrlsean97@cluster0.lblgl.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n\r\n    client.close()\r\n\r\n    return{\r\n        fallback: false,\r\n        paths: meetups.map(meetup=>({params: {meetupId: meetup._id.toString()}}))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    // fetch data for a single meetup\r\n\r\n    const meetupId = context.params.meetupId\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://sad:ehdrlsean97@cluster0.lblgl.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({_id: meetupId});\r\n\r\n    client.close()\r\n\r\n    return{\r\n        props:{\r\n            meetupData: selectedMeetup,\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}